{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAIoC;;AAEgC;;AAYlE;;AAEF;AACA,WAAW,MAAM;;AAEjB;;AAEA;;AAEA,+EAAoB;AACpB,iFAAyB;;AAEzB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,kFAAuB;AAC3B,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU,IAAI,YAAY;AAClD,MAAM,+EAAoB;AAC1B;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;;;;;;;;;;;;;;;;;;;;ACrHgD;;AAQ9C;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,EAAE,4DAAoB;;AAEtcAAc;AACzC;AACA;;AAEA;AACA;AACA,2BAA2B,UAAU,IAAI,YAAY;AACrD;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5KkB;;AAMU;;AAE6B;;AAEzD;AACA;AACA;AACA,IAAI,kEAA0B;AAC9B,IAAI,2DAAQ;AACZ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,oBAAoB,kDAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,sDAAc;AAClB,gBAAgB,6CAAS;AACzB,IAAI,mEAAgB;AACpB,IAAI,uDAAe;AACnB,IAAI,mDAAW;AACf,IAAI,kDAAU;AACd,IAAI,uEAAoB;AACxB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAI,kDAAU;;AAEd;AACA;AACA,GAAG;AACH;;;;;;;UC/EA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://to-do-list/./src/index.js","webpack://to-do-list/./src/modules/dom-manipulation.js","webpack://to-do-list/./src/modules/event-handler.js","webpack://to-do-list/webpack/bootstrap","webpack://to-do-list/webpack/runtime/define property getters","webpack://to-do-list/webpack/runtime/hasOwnProperty shorthand","webpack://to-do-list/webpack/runtime/make namespace object","webpack://to-do-list/webpack/before-startup","webpack://to-do-list/webpack/startup","webpack://to-do-list/webpack/after-startup"],"sourcesContent":["import {\n  createToDoItemButton,\n  createProjectParagraphs,\n  createToDoParagraphs,\n} from './modules/dom-manipulation';\n\nimport { createToDoItemButtonLogic } from './modules/event-handler';\n\nexport {\n  populateDropdownMenu,\n  removeCreateToDoItemButton,\n  addToDoToArray,\n  displayProjects,\n  displayToDo,\n  removeForm,\n  addOptions,\n  createToDo,\n  todoArray,\n};\n\n// ! Do I need this code below for Prettier to work??\n// const { doc } = require('prettier');\n\n// ? I got a console.log shortcut. Put your cursor on a word and do ctr+alt+w then either W or up or down arrows. Also to make it a string, do shift+alt+W and either W or up or down arrows.\n\nconst todoArray = [];\n\ncreateToDoItemButton();\ncreateToDoItemButtonLogic();\n\n// --- FUNCTIONS ---\n\nfunction populateDropdownMenu() {\n  // Loops through the array and grabs each value and it's index position\n  todoArray.forEach((currentValue, index) => {\n    const projectValues = Object.values(currentValue)[0];\n\n    let optionDuplicate = false;\n\n    document.querySelectorAll('option').forEach((option) => {\n      if (projectValues == option.innerText) {\n        optionDuplicate = true;\n      }\n    });\n\n    if (optionDuplicate !== true) {\n      // fills the dropdown menu with the projects in the array\n      const newOption = document.createElement('option');\n      dropdownProjectMenu.appendChild(newOption);\n      newOption.setAttribute('value', projectValues);\n      newOption.innerText = projectValues;\n    }\n  });\n}\n\nfunction removeCreateToDoItemButton() {\n  document.querySelector('.new-todo-button').remove();\n}\n\nfunction removeForm() {\n  document.querySelector('form').remove();\n}\n\nfunction addOptions(newProjectField) {\n  // Checks for duplicates\n  let optionDuplicate = false;\n\n  document.querySelectorAll('option').forEach((option) => {\n    if (newProjectField.value == option.innerText) {\n      optionDuplicate = true;\n    }\n  });\n\n  if (optionDuplicate !== true) {\n    updateOptions(newProjectField);\n\n    // automatically sets dropdown menu to last created new project\n    document.querySelector('#dropdownProjectMenu').value =\n      document.querySelector('#dropdownProjectMenu > option:last-child').value;\n  }\n}\n\nfunction updateOptions(newProjectField) {\n  const getDropdownMenu = document.querySelector('#dropdownProjectMenu');\n  const makeOption = document.createElement('option');\n\n  makeOption.setAttribute('value', newProjectField.value);\n  makeOption.innerText = newProjectField.value;\n  getDropdownMenu.appendChild(makeOption);\n}\n\nfunction displayProjects() {\n  // Loops through the array and grabs each value and it's index position\n  todoArray.forEach((currentValue, index) => {\n    const projectValues = Object.values(currentValue)[0];\n    createProjectParagraphs(projectValues);\n  });\n}\n\nfunction displayToDo() {\n  // Loops through the array and grabs each value and it's index position\n  todoArray.forEach((currentValue, index) => {\n    console.log(index + ' ' + Object.values(currentValue)[0]);\n    // Loops through each object in the array and displays each key/value pair\n    for (const [objectKey, objectValue] of Object.entries(currentValue)) {\n      // console.log(`${objectKey}: ${objectValue}`);\n      createToDoParagraphs(objectKey, objectValue);\n    }\n  });\n}\n\nfunction addToDoToArray(newTodo) {\n  todoArray.unshift(newTodo);\n}\n\nfunction createToDo(project, title, description, date, priority, notes) {\n  return { project, title, description, date, priority, notes };\n}\n","import { populateDropdownMenu } from '../index';\n\nexport {\n  createToDoItemButton,\n  makeForm,\n  createProjectParagraphs,\n  createToDoParagraphs,\n  removeParagraphs,\n};\n\nconst content = document.querySelector('.content');\n\nfunction createToDoItemButton() {\n  const newToDoButton = document.createElement('button');\n  newToDoButton.innerText = 'Create ToDo Item';\n  newToDoButton.classList.add('new-todo-button');\n  content.prepend(newToDoButton);\n}\n\nfunction makeForm() {\n  const form = document.createElement('form');\n  form.setAttribute('action', '');\n  form.setAttribute('method', 'get');\n  content.prepend(form);\n\n  const dropdownProjectMenu = document.createElement('select');\n  form.appendChild(dropdownProjectMenu);\n  dropdownProjectMenu.setAttribute('id', 'dropdownProjectMenu');\n  dropdownProjectMenu.setAttribute('name', 'dropdownProjectMenu');\n  const dropdownProjectMenuLabel = document.createElement('label');\n  dropdownProjectMenuLabel.innerText = 'Assign To Project';\n  dropdownProjectMenuLabel.setAttribute('for', 'dropdownProjectMenu');\n  form.appendChild(dropdownProjectMenuLabel);\n\n  const defaultOption = document.createElement('option');\n  dropdownProjectMenu.appendChild(defaultOption);\n  defaultOption.setAttribute('value', 'default-project');\n  defaultOption.innerText = 'Default Project';\n\n  populateDropdownMenu();\n\n  createBreak(form);\n\n  const newProjectTitle = document.createElement('input');\n  form.appendChild(newProjectTitle);\n  newProjectTitle.setAttribute('type', 'text');\n  newProjectTitle.setAttribute('id', 'newproject');\n  newProjectTitle.setAttribute('name', 'newproject');\n  const newProjectLabel = document.createElement('label');\n  newProjectLabel.innerText = 'Or Create New Project';\n  newProjectLabel.setAttribute('for', 'newproject');\n  form.appendChild(newProjectLabel);\n\n  createBreak(form);\n\n  const projectButton = document.createElement('button');\n  projectButton.innerText = 'Add New Project';\n  projectButton.classList.add('project-button');\n  form.appendChild(projectButton);\n\n  createBreak(form);\n\n  const todoTitle = document.createElement('input');\n  form.appendChild(todoTitle);\n  todoTitle.setAttribute('type', 'text');\n  todoTitle.setAttribute('id', 'title');\n  todoTitle.setAttribute('name', 'title');\n  const titleLabel = document.createElement('label');\n  titleLabel.innerText = 'ToDo Title';\n  titleLabel.setAttribute('for', 'title');\n  form.appendChild(titleLabel);\n\n  createBreak(form);\n\n  const todoDescription = document.createElement('input');\n  form.appendChild(todoDescription);\n  todoDescription.setAttribute('type', 'text');\n  todoDescription.setAttribute('id', 'description');\n  todoDescription.setAttribute('name', 'description');\n  const descriptionLabel = document.createElement('label');\n  descriptionLabel.innerText = 'ToDo Description';\n  descriptionLabel.setAttribute('for', 'description');\n  form.appendChild(descriptionLabel);\n\n  createBreak(form);\n\n  const todoDate = document.createElement('input');\n  form.appendChild(todoDate);\n  todoDate.setAttribute('type', 'date');\n  todoDate.setAttribute('id', 'date');\n  todoDate.setAttribute('name', 'date');\n  const dateLabel = document.createElement('label');\n  dateLabel.innerText = 'Due Date';\n  dateLabel.setAttribute('for', 'date');\n  form.appendChild(dateLabel);\n\n  createBreak(form);\n\n  const radioPriority1 = document.createElement('input');\n  form.appendChild(radioPriority1);\n  radioPriority1.setAttribute('type', 'radio');\n  radioPriority1.setAttribute('id', 'P1');\n  radioPriority1.setAttribute('name', 'priority');\n  radioPriority1.setAttribute('value', 'P1');\n  const labelPriority1 = document.createElement('label');\n  labelPriority1.innerText = 'P1';\n  labelPriority1.setAttribute('for', 'P1');\n  form.appendChild(labelPriority1);\n\n  const radioPriority2 = document.createElement('input');\n  form.appendChild(radioPriority2);\n  radioPriority2.setAttribute('type', 'radio');\n  radioPriority2.setAttribute('id', 'P2');\n  radioPriority2.setAttribute('name', 'priority');\n  radioPriority2.setAttribute('value', 'P2');\n  const labelPriority2 = document.createElement('label');\n  labelPriority2.innerText = 'P2';\n  labelPriority2.setAttribute('for', 'P2');\n  form.appendChild(labelPriority2);\n\n  const radioPriority3 = document.createElement('input');\n  form.appendChild(radioPriority3);\n  radioPriority3.setAttribute('type', 'radio');\n  radioPriority3.setAttribute('id', 'P3');\n  radioPriority3.setAttribute('name', 'priority');\n  radioPriority3.setAttribute('value', 'P3');\n  const labelPriority3 = document.createElement('label');\n  labelPriority3.innerText = 'P3';\n  labelPriority3.setAttribute('for', 'P3');\n  form.appendChild(labelPriority3);\n\n  const radioPriority4 = document.createElement('input');\n  form.appendChild(radioPriority4);\n  radioPriority4.setAttribute('type', 'radio');\n  radioPriority4.setAttribute('id', 'P4');\n  radioPriority4.setAttribute('name', 'priority');\n  radioPriority4.setAttribute('value', 'P4');\n  radioPriority4.setAttribute('checked', '');\n  const labelPriority4 = document.createElement('label');\n  labelPriority4.innerText = 'P4';\n  labelPriority4.setAttribute('for', 'P4');\n  form.appendChild(labelPriority4);\n\n  createBreak(form);\n\n  const notes = document.createElement('textarea');\n  form.appendChild(notes);\n  notes.setAttribute('id', 'notes');\n  notes.setAttribute('name', 'notes');\n  const notesLabel = document.createElement('label');\n  notesLabel.innerText = 'Notes';\n  notesLabel.setAttribute('for', 'notes');\n  form.appendChild(notesLabel);\n\n  createBreak(form);\n\n  const todoButton = document.createElement('button');\n  todoButton.innerText = 'Add ToDo';\n  todoButton.classList.add('todo-button');\n  form.appendChild(todoButton);\n}\n\nfunction createBreak(element) {\n  const br = document.createElement('br');\n  element.appendChild(br);\n}\n\nfunction createProjectParagraphs(projectValues) {\n  const paragraph = document.createElement('p');\n  paragraph.innerText = `${projectValues}`;\n  content.appendChild(paragraph);\n}\n\nfunction createToDoParagraphs(objectKey, objectValue) {\n  const paragraph = document.createElement('p');\n  paragraph.innerText = `${objectKey}: ${objectValue}`;\n  content.appendChild(paragraph);\n}\n\nfunction removeParagraphs() {\n  document.querySelectorAll('p').forEach((para) => para.remove());\n}\n","import {\n  removeCreateToDoItemButton,\n  addToDoToArray,\n  displayProjects,\n  displayToDo,\n  removeForm,\n  addOptions,\n  createToDo,\n  todoArray,\n} from '../index';\n\nimport {\n  makeForm,\n  removeParagraphs,\n  createToDoItemButton,\n} from './dom-manipulation';\n\nexport { createToDoItemButtonLogic, addToDoButtonLogic };\n\nfunction createToDoItemButtonLogic() {\n  document.querySelector('.new-todo-button').addEventListener('click', (e) => {\n    e.preventDefault();\n    removeCreateToDoItemButton();\n    makeForm();\n    addToDoButtonLogic();\n    addNewProjectButtonLogic();\n  });\n}\n\nfunction addToDoButtonLogic() {\n  document.querySelector('.todo-button').addEventListener('click', (e) => {\n    e.preventDefault();\n    const project = document.querySelector('#dropdownProjectMenu');\n    let title = document.querySelector('#title');\n    const description = document.querySelector('#description');\n    const date = document.querySelector('#date');\n    let priority;\n    document.querySelectorAll('[name=\"priority\"]').forEach((radio) => {\n      if (radio.checked) {\n        priority = radio.value;\n      }\n    });\n\n    const notes = document.querySelector('#notes');\n\n    const newToDo = createToDo(\n      project.value,\n      title.value,\n      description.value,\n      date.value,\n      priority,\n      notes.value\n    );\n\n    addToDoToArray(newToDo);\n    console.log(todoArray);\n    removeParagraphs();\n    displayProjects();\n    displayToDo();\n    removeForm();\n    createToDoItemButton();\n    createToDoItemButtonLogic();\n  });\n}\n\nfunction addNewProjectButtonLogic() {\n  document.querySelector('.project-button').addEventListener('click', (e) => {\n    e.preventDefault();\n    const newProjectField = document.querySelector('#newproject');\n\n    if (newProjectField.value === '') {\n      return;\n    }\n\n    addOptions(newProjectField);\n\n    // resets 'create new project' input field\n    newProjectField.value = '';\n  });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":[],"sourceRoot":""}